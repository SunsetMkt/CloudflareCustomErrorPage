<head>
  <meta charset="utf-8" />
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1"
  />
  <meta name="renderer" content="webkit" />
  <meta name="force-rendering" content="webkit" />
  <meta name="backend-renderer" content="ejs" />
  <meta name="custom-page" content="186526/CloudflareCustomErrorPage" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <link rel="preconnect" href="https://fonts.gstatic.com" />
  <link
    href="https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@500&family=Fira+Mono&family=Ubuntu&display=swap"
    rel="stylesheet"
  />
  <title><%= config.statusCode %> | <%= config.text %></title>
  <link
    href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined"
    rel="stylesheet"
  />
  <link href="index.css" rel="stylesheet" />
  <script>
    // Client-side i18n support
    window.i18n = <%- JSON.stringify(i18n) %>;
    
    // Simple translation function
    window.t = function(key, defaultValue) {
      const keys = key.split('.');
      let value = window.i18n;
      for (const k of keys) {
        if (value && typeof value === 'object' && k in value) {
          value = value[k];
        } else {
          return defaultValue || key;
        }
      }
      return value || defaultValue || key;
    };
    
    // Apply translations on page load
    window.addEventListener('DOMContentLoaded', function() {
      // Translate elements with data-i18n attribute
      document.querySelectorAll('[data-i18n]').forEach(function(element) {
        const key = element.getAttribute('data-i18n');
        const defaultValue = element.textContent;
        element.innerHTML = window.t(key, defaultValue);
      });
    });
  </script>
  <script defer>
    document.head.innerHTML += `<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC&display=swap" rel="stylesheet">`;
  </script>
</head>
